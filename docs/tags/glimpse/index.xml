<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>glimpse on Luke Segars</title>
    <link>/tags/glimpse/</link>
    <description>Recent content in glimpse on Luke Segars</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 10 Nov 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/glimpse/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Foundations of world generation</title>
      <link>/posts/foundations-of-world-generation/</link>
      <pubDate>Tue, 10 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/foundations-of-world-generation/</guid>
      <description>Over the last two weeks I&#39;ve refined the goals of my own world generator and gone back to the drawing board on how to be successful. This has involved reading up on a ton of prior work, the best of which is provided below.
Refined goal My goal is to generate worlds that look good when printed; this project will be successful once I can generate enough high-quality maps to make a coffee table book that I don&#39;t have to hide in a drawer.</description>
    </item>
    
    <item>
      <title>My procedural world generator</title>
      <link>/posts/my-procedural-world-generator/</link>
      <pubDate>Tue, 27 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/my-procedural-world-generator/</guid>
      <description>I grew up interested in fantasy worlds and have been hooked on the idea of building them since I was in middle school. Programmatically generating these worlds is one of my go-to projects when I feel like coding, and I&#39;ve been merging a few of these efforts into a single codebase that I can add onto every now and then to gradually get better results. It&#39;s way too fun, even if the world quality still isn&#39;t very good yet.</description>
    </item>
    
  </channel>
</rss>